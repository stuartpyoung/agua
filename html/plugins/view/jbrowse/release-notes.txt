version 1.2, Febrary 2011

These notes document changes since release 1.1 in September 2010.

Most of the work in this release went into making JBrowse handle large
amounts of feature data better.  Before, the amount of memory used
when processing BAM files was more than 10 times the size of the file;
now, the amount of memory required is fixed.

Other new features in this release:

- Import of UCSC database dumps.  A ucsc-to-json.pl script is now
  provided for taking database dumps from UCSC and creating a JBrowse
  instance using them.  The "genePred" and "bed" track types are
  currently supported; "psl" tracks are not yet supported.

- Touch.  Juan Aguilar's code for using JBrowse on an iOS device
  (iPhone, iPod touch, iPad) is now integrated.  As of the current
  release, users wanting to use JBrowse on those devices have to
  navigate to a separate HTML page (touch.html) rather than the
  default index.html; i.e. the code does not currently detect
  touchscreen devices automatically.

- Bug fixes. A number of bugs have also been fixed, including one that
  restricted the placement of the "data" directory, and a bug in
  wiggle rendering that caused spurious peaks or troughs at tile
  boundaries.

Known issues/limitations with this release:

- Some additional CPAN modules are now required:

    PerlIO::gzip
    Heap::Simple
    Devel::Size

- No JSON-level backward compatibility. If you are upgrading from an
  older version of JBrowse, you will have to regenerate all the JSON
  files on your server. This means wiping your jbrowse/data directory
  and re-running all server scripts (flatfile-to-json, biodb-to-json,
  wig-to-json, etc.) to regenerate your data from the original
  FASTA/GFF/BED/WIG files. We apologize for the inconvenience of this,
  but it is inevitable sometimes; we do aim to minimize the number of
  releases which are backwardly-incompatible in this way.

========================================================

version 1.1, September 2010.

These notes document JBrowse developments in the period from July 2009
(online publication of the first JBrowse paper in Genome Research, the
de facto "version 1.0") up to September 2010 (the first in a planned
series of quarterly releases).

New features in this release:

- Scalability. JBrowse can now handle very large data tracks,
including human EST/SNP tracks, or tracks of next-gen sequence
reads. Large datasets are broken into smaller chunks, so there is no
loading delay for big tracks.

- Extensibility. A Perl module (ImageTrackRenderer.pm) for creating
user-drawn image tracks is now available, based on the CPAN GD.pm
module. An example program is provided, draw-basepair-track.pl, that
uses this module to draw arcs over a sequence representing the
base-pairing interactions of RNA secondary structure.

- Bug fixes. Numerous display glitches have been fixed, including
issues with wide-screen monitors and long mostly-offscreen features.

Known issues/limitations with this release:

- No JSON-level backward compatibility. If you are upgrading from an
older version of JBrowse, you will have to regenerate all the JSON
files on your server. This means wiping your jbrowse/data directory
and re-running all server scripts (flatfile-to-json, biodb-to-json,
wig-to-json, etc.) to regenerate your data from the original
FASTA/GFF/BED/WIG files.

- Next-gen sequence display is currently restricted to the
co-ordinates of the outermost region to which a single read is
mapped. There is no support (yet) for displaying pairing between
reads, sequences of reads, alignment of read to reference sequence
(e.g. splicing), or mismatches between read and reference.

- Processing SAM/BAM next-gen sequence files takes a lot of memory
(about 500 megabytes per million features).

- Numerical (as opposed to comparative) readout of the data in Wiggle
tracks, e.g. via a y-axis label or mouseover popup, is still
unsupported.

Please visit the website for contact info

http://jbrowse.org/

