{
    stages: [

        stage:  {
            'workflownumber' => '1',
            'workflowname' => 'Assembler',
            'workflowdescription' => 'Collect reads, screen for vector, load into mysql and assemble with CAP3',
            'workflowxmlfile' => 'bin/pipeline4/xml/workflow/est.assembler.xml',
            'stagenumber' => '1',
            'stagename' => 'Collect reads',
            'stagedescription' => 'Collect all chromat files and put in chromat_dir',
            'status' => 'waiting',
            'progress' => ' ',
            'applicationname' => 'readscollect',
            'application' => 'bin/pipeline4/readscollect.pl',
            'arguments' => '"-dfunnybase11", "-e151", "-p1-5"',
            'inputfiles' => '',
            'outputfiles' => 'pipeline/funnybase11/chromat_dir/*.ab1',
            'stderrfile' => 'pipeline/funnybase11/collection/funnybase11.readscollect.stderr',
            'stdoutfile' => 'pipeline/funnybase11/collection/funnybase11.readscollect.stdout',
            'started' => '0000-00-00 00:00:00',
            'completed' => '0000-00-00 00:00:00',
            'workflowpid' => '27229',
            'parentpid' => ' ',
            'childpid' => ' ',
        }

    ]
}

  <stages' => '
    <stage' => '


      <workflownumber' => '1</workflownumber' => '
      <workflowname' => 'Assembler</workflowname' => '
      <workflowdescription' => 'Collect reads, screen for vector, load into mysql and assemble with CAP3</workflowdescription' => '
      <workflowxmlfile' => 'bin/pipeline4/xml/workflow/est.assembler.xml</workflowxmlfile' => '
      <stagenumber' => '1</stagenumber' => '
      <stagename' => 'Collect reads</stagename' => '
      <stagedescription' => 'Collect all chromat files and put in chromat_dir</stagedescription' => '
      <status' => 'waiting</status' => '
      <progress' => ' </progress' => '
      <applicationname' => 'readscollect</applicationname' => '
      <application' => 'bin/pipeline4/readscollect.pl</application' => '
      <arguments' => '"-dfunnybase11", "-e151", "-p1-5"</arguments' => '
      <inputfiles' => '</inputfiles' => '
      <outputfiles' => 'pipeline/funnybase11/chromat_dir/*.ab1</outputfiles' => '
      <stderrfile' => 'pipeline/funnybase11/collection/funnybase11.readscollect.stderr</stderrfile' => '
      <stdoutfile' => 'pipeline/funnybase11/collection/funnybase11.readscollect.stdout</stdoutfile' => '
      <started' => '0000-00-00 00:00:00</started' => '
      <completed' => '0000-00-00 00:00:00</completed' => '
      <workflowpid' => '27229</workflowpid' => '
      <parentpid' => ' </parentpid' => '
      <childpid' => ' </childpid' => '
    </stage' => '


    <stage' => '
      <workflownumber' => '1</workflownumber' => '
      <workflowname' => 'Assembler</workflowname' => '
      <workflowdescription' => 'Collect reads, screen for vector, load into mysql and assemble with CAP3</workflowdescription' => '
      <workflowxmlfile' => 'bin/pipeline4/xml/workflow/est.assembler.xml</workflowxmlfile' => '
      <stagenumber' => '2</stagenumber' => '
      <stagename' => 'Predict reads</stagename' => '
      <stagedescription' => 'Predict reads sequences with phred (.ab1 to .phd files)</stagedescription' => '
      <status' => 'waiting</status' => '
      <progress' => ' </progress' => '
      <applicationname' => 'readsphred</applicationname' => '
      <application' => 'bin/pipeline4/readsphred.pl</application' => '
      <arguments' => '"-dfunnybase11"</arguments' => '
      <inputfiles' => 'pipeline/funnybase11/chromat_dir/*.ab1</inputfiles' => '
      <outputfiles' => 'pipeline/funnybase11/phd_dir/*phd.1</outputfiles' => '
      <stderrfile' => 'pipeline/funnybase11/collection/funnybase11.readsphred.stderr</stderrfile' => '
      <stdoutfile' => 'pipeline/funnybase11/collection/funnybase11.readsphred.stdout</stdoutfile' => '
      <started' => '0000-00-00 00:00:00</started' => '
      <completed' => '0000-00-00 00:00:00</completed' => '
      <workflowpid' => '27229</workflowpid' => '
      <parentpid' => ' </parentpid' => '
      <childpid' => ' </childpid' => '
    </stage' => '
    <stage' => '
      <workflownumber' => '1</workflownumber' => '
      <workflowname' => 'Assembler</workflowname' => '
      <workflowdescription' => 'Collect reads, screen for vector, load into mysql and assemble with CAP3</workflowdescription' => '
      <workflowxmlfile' => 'bin/pipeline4/xml/workflow/est.assembler.xml</workflowxmlfile' => '
      <stagenumber' => '3</stagenumber' => '
      <stagename' => 'Vector screen</stagename' => '
      <stagedescription' => 'Screen for vector sequence and mask with cross_match</stagedescription' => '
      <status' => 'waiting</status' => '
      <progress' => ' </progress' => '
      <applicationname' => 'readsarrayscreened</applicationname' => '
      <application' => 'bin/pipeline4/readsarrayscreened.pl</application' => '
      <arguments' => '"-dfunnybase11"</arguments' => '
      <inputfiles' => '</inputfiles' => '
      <outputfiles' => '</outputfiles' => '
      <stderrfile' => 'pipeline/funnybase11/collection/funnybase11.readsarrayscreened.stderr</stderrfile' => '
      <stdoutfile' => 'pipeline/funnybase11/collection/funnybase11.readsarrayscreened.stdout</stdoutfile' => '
      <started' => '0000-00-00 00:00:00</started' => '
      <completed' => '0000-00-00 00:00:00</completed' => '
      <workflowpid' => '27229</workflowpid' => '
      <parentpid' => ' </parentpid' => '
      <childpid' => ' </childpid' => '
    </stage' => '
    <stage' => '
      <workflownumber' => '1</workflownumber' => '
      <workflowname' => 'Assembler</workflowname' => '
      <workflowdescription' => 'Collect reads, screen for vector, load into mysql and assemble with CAP3</workflowdescription' => '
      <workflowxmlfile' => 'bin/pipeline4/xml/workflow/est.assembler.xml</workflowxmlfile' => '
      <stagenumber' => '4</stagenumber' => '
      <stagename' => 'Load reads</stagename' => '
      <stagedescription' => 'Filter reads and load into reads mysql table</stagedescription' => '
      <status' => 'waiting</status' => '
      <progress' => ' </progress' => '
      <applicationname' => 'reads</applicationname' => '
      <application' => 'bin/pipeline4/reads.pl</application' => '
      <arguments' => '"-dfunnybase11", "-snucleotide"</arguments' => '
      <inputfiles' => '</inputfiles' => '
      <outputfiles' => '</outputfiles' => '
      <stderrfile' => 'pipeline/funnybase11/collection/funnybase11.reads.stderr</stderrfile' => '
      <stdoutfile' => 'pipeline/funnybase11/collection/funnybase11.reads.stdout</stdoutfile' => '
      <started' => '0000-00-00 00:00:00</started' => '
      <completed' => '0000-00-00 00:00:00</completed' => '
      <workflowpid' => '27229</workflowpid' => '
      <parentpid' => ' </parentpid' => '
      <childpid' => ' </childpid' => '
    </stage' => '
    <stage' => '
      <workflownumber' => '1</workflownumber' => '
      <workflowname' => 'Assembler</workflowname' => '
      <workflowdescription' => 'Collect reads, screen for vector, load into mysql and assemble with CAP3</workflowdescription' => '
      <workflowxmlfile' => 'bin/pipeline4/xml/workflow/est.assembler.xml</workflowxmlfile' => '
      <stagenumber' => '5</stagenumber' => '
      <stagename' => 'Create .fasta file</stagename' => '
      <stagedescription' => 'Create the .fasta and .qual files for CAP3 or phrap assembly</stagedescription' => '
      <status' => 'waiting</status' => '
      <progress' => ' </progress' => '
      <applicationname' => 'readsfasta</applicationname' => '
      <application' => 'bin/pipeline4/readsfasta.pl</application' => '
      <arguments' => '"-dfunnybase11", "-snucleotide"</arguments' => '
      <inputfiles' => '</inputfiles' => '
      <outputfiles' => 'pipeline/funnybase11/edit_dir/funnybase11.fasta</outputfiles' => '
      <stderrfile' => 'pipeline/funnybase11/collection/funnybase11.readsfasta.stderr</stderrfile' => '
      <stdoutfile' => 'pipeline/funnybase11/collection/funnybase11.readsfasta.stdout</stdoutfile' => '
      <started' => '0000-00-00 00:00:00</started' => '
      <completed' => '0000-00-00 00:00:00</completed' => '
      <workflowpid' => '27229</workflowpid' => '
      <parentpid' => ' </parentpid' => '
      <childpid' => ' </childpid' => '
    </stage' => '
    <stage' => '
      <workflownumber' => '1</workflownumber' => '
      <workflowname' => 'Assembler</workflowname' => '
      <workflowdescription' => 'Collect reads, screen for vector, load into mysql and assemble with CAP3</workflowdescription' => '
      <workflowxmlfile' => 'bin/pipeline4/xml/workflow/est.assembler.xml</workflowxmlfile' => '
      <stagenumber' => '6</stagenumber' => '
      <stagename' => 'CAP3 assembly</stagename' => '
      <stagedescription' => 'Assemble reads with CAP3</stagedescription' => '
      <status' => 'waiting</status' => '
      <progress' => ' </progress' => '
      <applicationname' => 'readsassemblyCAP3</applicationname' => '
      <application' => 'bin/pipeline4/readsassemblyCAP3.pl</application' => '
      <arguments' => '"-dfunnybase11", "-snucleotide"</arguments' => '
      <inputfiles' => 'pipeline/funnybase11/edit_dir/funnybase11.fasta;pipeline/funnybase11/edit_dir/funnybase11.fasta.qual</inputfiles' => '
      <outputfiles' => 'pipeline/funnybase11/edit_dir/funnybase11.fasta.cap.contigs;pipeline/funnybase11/edit_dir/funnybase11.fasta.cap.singlets;pipeline/funnybase11/edit_dir/funnybase11.fasta.cap.ace;pipeline/funnybase11/edit_dir/funnybase11.fasta.cap.contigs.links;pipeline/funnybase11/edit_dir/funnybase11.fasta.cap.contigs.qual;pipeline/funnybase11/edit_dir/funnybase11.fasta.cap.info</outputfiles' => '
      <stderrfile' => 'pipeline/funnybase11/collection/funnybase11.readsassemblyCAP3.stderr</stderrfile' => '
      <stdoutfile' => 'pipeline/funnybase11/collection/funnybase11.readsassemblyCAP3.stdout</stdoutfile' => '
      <started' => '0000-00-00 00:00:00</started' => '
      <completed' => '0000-00-00 00:00:00</completed' => '
      <workflowpid' => '27229</workflowpid' => '
      <parentpid' => ' </parentpid' => '
      <childpid' => ' </childpid' => '
    </stage' => '
  </stages' => '
dlc-genomics:/var/www/cgi-bin/sandbox22 young$ ./workflow.cgi "mode=application_xml&database=funnybase11&workflow_number=1&stage_number=1"
Content-type: text/xml

  <applications' => '
    <application' => '
      <workflownumber' => '1</workflownumber' => '
      <workflowname' => 'Assembler</workflowname' => '
      <workflowdescription' => 'Collect reads, screen for vector, load into mysql and assemble with CAP3</workflowdescription' => '
      <workflowxmlfile' => 'bin/pipeline4/xml/workflow/est.assembler.xml</workflowxmlfile' => '
      <stagenumber' => '1</stagenumber' => '
      <stagename' => 'Collect reads</stagename' => '
      <stagedescription' => 'Collect all chromat files and put in chromat_dir</stagedescription' => '
      <status' => 'waiting</status' => '
      <progress' => ' </progress' => '
      <applicationname' => 'readscollect</applicationname' => '
      <application' => 'bin/pipeline4/readscollect.pl</application' => '
      <arguments' => '"-dfunnybase11", "-e151", "-p1-5"</arguments' => '
      <inputfiles' => '</inputfiles' => '
      <outputfiles' => 'pipeline/funnybase11/chromat_dir/*.ab1</outputfiles' => '
      <stderrfile' => 'pipeline/funnybase11/collection/funnybase11.readscollect.stderr</stderrfile' => '
      <stdoutfile' => 'pipeline/funnybase11/collection/funnybase11.readscollect.stdout</stdoutfile' => '
      <started' => '0000-00-00 00:00:00</started' => '
      <completed' => '0000-00-00 00:00:00</completed' => '
      <workflowpid' => '27229</workflowpid' => '
      <parentpid' => ' </parentpid' => '
      <childpid' => ' </childpid' => '
    </application' => '
  </applications' => '
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"' => '
<html lang="en"' => '
<head' => '
    <title' => '<!-- Insert your title here --' => '</title' => '
</head' => '
<body' => '
    <!-- Insert your content here --' => '
</body' => '
</html' => '
