#!/usr/bin/perl -w

#### DEBUG

#### TIME
my $time = time();

=head2

    APPLICATION     jbrowseRefseq

    PURPOSE

		CREATE A refSeqs.js JSON FILE CONTAINING ENTRIES FOR ALL CHROMOSOMES

		IN THE REFERENCE GENOME

    INPUT

			1. chromosome-sizes.txt FILE GENERATED BY chromosomeSizes.pl

			2. CHUNK SIZE FOR GENERATING FEATURES

			3. OUTPUT DIRECTORY

    OUTPUT

        1. OUTPUT FILE refSeqs.js IN OUTPUT DIRECTORY

		refSeqs =
		[
		   {
			  "length" : 247249719,
			  "name" : "chr1",
			  "seqDir" : "data/seq/chr1",
			  "seqChunkSize" : 20000,
			  "end" : 247249719,
			  "start" : 0
		   }
		   ,
		   {
			  "length" : 242951149,
			  "name" : "chr2",
			  "seqDir" : "data/seq/chr2",
			  "seqChunkSize" : 20000,
			  "end" : 242951149,
			  "start" : 0
		   }
		   ,

		]

    USAGE

	./jbrowseRefseq.pl <--inputfiles String> <--outputdir String>
        <--inputdir String> [--splitfile String] [--reads Integer] [--convert]
        [--clean] [--queue String] [--maxjobs Integer] [--cpus Integer] [--help]

    --outputdir       :   Directory with one subdirectory per reference chromosome
                            containing an out.sam or out.bam alignment output file
    --inputdir    :   Location of directory containing chr*.fa reference files
    --chromodir         :   Name of the reference chromodir (e.g., 'mouse')
    --queue           :   Cluster queue name
    --cluster         :   Cluster type (LSF|PBS)
    --help            :   print help info


	NOTES

		refSeqs =
		[
		   {
			  "length" : 247249719,
			  "name" : "chr1",
			  "seqDir" : "data/seq/chr1",
			  "seqChunkSize" : 20000,
			  "end" : 247249719,
			  "start" : 0
		   }
		   ,
		   {
			  "length" : 242951149,
			  "name" : "chr2",
			  "seqDir" : "data/seq/chr2",
			  "seqChunkSize" : 20000,
			  "end" : 242951149,
			  "start" : 0
		   }
		   ,

		]

	EXAMPLES

/nethome/bioinfo/apps/agua/0.5/bin/apps/jbrowseRefseq.pl \
--chromofile /scratch/syoung/base/pipeline/SRA/NA18507/maq/maq1 \
--outputdir /scratch/syoung/base/pipeline/jbrowse/agua/0.5/maq1


=cut

use strict;

#### EXTERNAL MODULES
use Term::ANSIColor qw(:constants);
use Data::Dumper;
use Getopt::Long;
use FindBin qw($Bin);

#### USE LIBRARY
use lib "$Bin/../../../lib";	
use lib "$Bin/../../../lib/external";	

#### INTERNAL MODULES
use JBrowse;
use Timer;
use Util;
use Conf::Agua;

##### STORE ARGUMENTS TO PRINT TO FILE LATER
my @arguments = @ARGV;
unshift @arguments, $0;

#### FLUSH BUFFER
$| =1;

#### SET JBrowse LOCATION
my $conf = Conf::Agua->new(inputfile=>"$Bin/../../../conf/default.conf");

#### GET OPTIONS
my $outputdir;
my $chunksize;
my $chromofile;
my $help;
print "jbrowseRefseq.pl    Use option --help for usage instructions.\n" and exit if not GetOptions (	
	#### JBROWSE
    'outputdir=s'	=> \$outputdir,
    'chromofile=s' 	=> \$chromofile,
    'chunksize=i' 	=> \$chunksize,
    'help' 			=> \$help
);

#### PRINT HELP
if ( defined $help )	{	usage();	}

#### CHECK INPUTS
die "outputdir not defined (Use --help for usage)\n" if not defined $outputdir;
die "chromofile not defined (Use --help for usage)\n" if not defined $chromofile;
die "chunksize not defined (Use --help for usage)\n" if not defined $chunksize;
print "Can't find outputdir: $outputdir\n" if not -d $outputdir;

#### DEBUG

#### INSTANTIATE JBrowse OBJECT
my $jbrowseObject = JBrowse->new(
	{
		#### JBROWSE
		outputdir 	=> 	$outputdir,
		chromofile 	=> 	$chromofile,
		chunksize	=>	$chunksize,
	}
);


#### GENERATE FEATURES
$jbrowseObject->generateRefseq();


#### PRINT RUN TIME
my $runtime = Timer::runtime( $time, time() );
print "jbrowseRefseq.pl    Run time: $runtime\n";
print "jbrowseRefseq.pl    Completed $0\n";
print "jbrowseRefseq.pl    ";
print Timer::current_datetime(), "\n";
print "jbrowseRefseq.pl    ****************************************\n\n\n";
exit;

#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#									SUBROUTINES
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


sub usage
{
	print GREEN;
	print `perldoc $0`;
	print RESET;
	exit;
}

